name: spinnybox_2d
description: Think different. Play different.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.0.0-218.1.beta <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # If you don't need one of the following dependencies,
  # delete the relevant line below, and get rid of any Dart code
  # that references the dependency.
  # firebase_core: ^2.7.0  # Needed for Crashlytics below
  # firebase_crashlytics: ^3.0.15  # Error reporting
  # games_services: ^3.0.0  # Achievements and leaderboards
  # google_mobile_ads: ^2.3.0  # Ads
  # in_app_purchase: ^3.1.5  # In-app purchases

  audioplayers: ^3.0.1
  badges: ^3.0.2
  cupertino_icons: ^1.0.5
  flame_audio: ^1.4.0
  flame_svg: ^1.7.1
  flame: ^1.6.0
  flutter_hooks: ^0.18.6
  flutter_riverpod: ^2.2.0
  flutter_svg: ^1.1.6
  go_router: ^6.2.0
  hooks_riverpod: ^2.2.0
  logging: ^1.1.1
  nanoid: ^1.0.0
  riverpod_annotation: ^1.2.1
  rxdart: ^0.27.7
  sensors_plus: ^2.0.2
  shared_preferences: ^2.0.18
  wakelock: ^0.6.2


dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.1
  lint: ^2.0.1
  flutter_native_splash: ^2.2.18
  flutter_launcher_icons: ^0.12.0
  build_runner: ^2.4.0
  build_verify: ^3.1.0
  riverpod_generator: ^1.2.0
  custom_lint: ^0.2.5
  riverpod_lint: ^1.0.1
  go_router_builder: ^1.1.2




# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec
# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec
# The following section is specific to Flutter.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/audio/
    - assets/svg/
    - assets/svg/game/
    - assets/svg/game/background/
    - assets/svg/game/player/
    - assets/svg/game/obstacles/
    - assets/svg/game/character/
    - assets/svg/icons/
    - assets/svg/ui/
    - assets/images/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.
  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages
  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: GloriaHallelujah
      fonts:
        - asset: assets/fonts/GloriaHallelujah-Regular.ttf
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
flutter_native_splash:
  image: assets/images/splash_screen_image_light.png
  color: '#ffffff'
  image_dark: assets/images/splash_screen_image_dark.png
  color_dark: '#313131'
  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  android_gravity: center
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  ios_content_mode: center

flutter_icons:
  image_path: assets/images/logo.png
  android: true
  ios: true
  remove_alpha_ios: true
